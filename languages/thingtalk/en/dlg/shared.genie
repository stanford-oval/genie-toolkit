// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>

// Shared templates and utilities, mostly collecting actual phrases or groups of phrases
// rather than complex logic

counterproposal_preamble = {
    'i was thinking more of';
    'i would like';
    'i am looking for';
    'do you have';
    'can you find';
    'is there';
    'that does not sound great , do you have';
}

the_base_noun_phrase = {
    ( 'the' noun:base_noun_phrase
    | 'that' noun:base_noun_phrase
    ) => noun;
}

generic_excitement_phrase = {
    'great !';
    'awesome !';
    'sounds good !';
    'alright ,';
    'sounds good ,';
    'perfect !';
}

greeting = {
    'hello !';
    'hi !';
}

generic_negative_proposal_reply = {
    'i do not like that';
    'i do not like that , do you have any other option ?';
}

accept_phrase = {
    'i like that';
    'yes i like that';
    'sure i like that';
    'sounds good';
}

tell_me_more_phrase = {
    'can you tell me more ?';
    'can you tell me more about it ?';
    'can you give me more info ?';
    'give me more info !';
    'give me more information .';
    'tell me more .';
}

learn_more_offer = {
    'would you like to learn more ?';
    'would you like to know more about it ?';
    'would you like to hear more about it ?';
    'are you interested to hear more about it ?';
}

yes_please_phrase = {
    'yes';
    'yes , please';
    'yeah';
}

ok_thanks_phrase = {
    'ok thank you that is all i need .';
    'ok thanks that is all i need .';
}
thanks_phrase = {
    'thank you , this is good for now .';
    'thank you , that will be all .';
    'thank you , that will be all for now .';
    'thank you this is what i need .';
    'thanks , this is good for now .';
    'thanks this is what i need .';
    'thank you for your help !';
    'thank you for your help , this is what i need .';
}
no_thanks_phrase = {
    'no thanks .';
    'no , thanks .';
    'no i am good thanks .';
    'no need thanks .';
    'no thank you , this is good for now .';
    'no thank you this is what i need .';
    'no thanks , this is good for now .';
    'no thanks this is what i need .';
    'no thanks that will be it .';
    'no thanks this will do .';
    'no thank you that will be it for now .';
    'no thanks this will do for now .';
    'no thank you that will be all .';
}

anything_else_phrase = {
    'is there anything else i can help you with ?';
    'can i help you with anything else ?';
    'do you need anything else ?';
    'anything else for you today ?';
}

sorry_preamble = {
    'sorry ,';
    'i am sorry ,';
    '';
}

nevermind_phrase = {
    'ok , never mind';
    'never mind then';
    'alright , never mind';
    'too bad , alright';
}

ask_recommend_phrase = {
    'which one would you recommend ?';
    'which 1 would you recommend ?';
    'what is your favorite ?';
    'surprise me ! just pick one please .';
}

generic_dontcare_phrase = {
    'it does not matter .';
    'it does not matter . can you suggest one ?';
    'i' ('do not have a' | 'have no') 'preference .' => '';
    'i' ('do not have a' | 'have no') 'preference . what do you recommend ?' => '';
    'i have no preference . please make a recommendation .' => '';
    'i have no preference . which' ('one' | '1') 'is best ?' => '';
}

no_dontcare_phrase = {
    'no' ('.' | ',') 'can you suggest one ?' => '';
    'no' ('.' | ',') 'please make a recommendation .' => '';
    'no' ('.' | ',') 'which' ('one' | '1') 'is best ?' => '';
    'no' ('.' | ',') 'you choose for me !' => '';
    'no' ('.' | ',') 'surprise me !' => '';
    'i have no preference . please make a recommendation .' => '';
}

prefer_question_phrase = {
    'do you want';
    'would you prefer';
    'would you like';
    'are you interested in';
    'are you looking for';
}

system_learn_more = {
    'what would you like to know ?';
    'what would you like to hear ?';
}
