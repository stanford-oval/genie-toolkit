// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>

// List proposal templates: the search is complete (1-3 search results), and the
// agent reads out the search results, optionally proposing an action to do on them

// A list proposal from the system is followed by:
// - choosing an element from the list (= "positive_list_proposal_reply_pair")
// - some form of search refinement (= "negative_list_proposa_reply_pair")
// - a question about an element of the list (= "list_proposal_search_question_pair")

{
    const D = require('../../dialogue_acts');
}

// a "list proposal" consists of the first few results of the current query,
// together with informative results about them, an offer to learn more, or an offer for an action
system_list_proposal = {
    ('i see' | 'i have' | 'i have found') name_list:result_name_list '.'
        ('' |
         'would you like to learn more ?' | 'would you like to learn more about either of them ?' |
         'would you like to know more about them ?' | 'would you like to hear more about them ?' |
         'are you interested to hear more about any of them ?')
        => D.checkListProposal(name_list, null, true);

    ('i see' | 'i have' | 'i have found') name_list:result_name_list '.' ('they' | 'all of them') 'are' info:result_info_phrase '.'
        => D.checkListProposal(name_list, info, true);

    ('i see' | 'i have' | 'i have found') name_list:result_name_list '.' 'both are' info:result_info_phrase '.' => {
        if (name_list.results.length !== 2)
            return null;
        return D.checkListProposal(name_list, info, true);
    };

    ('i see' | 'i have' | 'i have found') name_list:result_name_list '.' action:action_coref_list_proposal
        => D.addActionToListProposal(name_list, action);
}

generic_list_proposal_accept_phrase = {
    ('ok' | 'yeah' | '') ('i like' | 'i am interested in' | 'i am intrigued by') name:constant_name '.' => name;
    ('ok' | 'yeah' | '') name:constant_name 'sounds' ('good' | 'really good' | 'nice' | 'interesting') '.' => name;
}

list_proposal_accept_phrase_must_have_action = {
    ('ok' | 'yeah' | '') ('i will go' | 'i will take' | 'i am good for') name:constant_name '.' => name;
}

list_proposal_accept_phrase_with_action = {
    name:generic_list_proposal_accept_phrase generic_preamble_for_action action:coref_action_command => [name, action];
    name:list_proposal_accept_phrase_must_have_action generic_preamble_for_action action:coref_action_command => [name, action];
}

list_proposal_accept_phrase_with_action_by_name = {
    ('ok' | 'yeah' | '') generic_preamble_for_action action:action_by_name_command => action;
}

list_proposal_tell_me_more = {
    ('ok' | 'yeah' | '') 'can you tell me more about' name:constant_name '?' => name;
    ('ok' | 'yeah' | '') ('i like' | 'i am interested in' | 'i am intrigued by') name:constant_name '.' tell_me_more_phrase => name;
    ('ok' | 'yeah' | '') name:constant_name 'sounds' ('good' | 'really good' | 'nice' | 'interesting') '.' tell_me_more_phrase => name;
}

positive_list_proposal_reply = {
    name:generic_list_proposal_accept_phrase => [name, null, false];
    name:list_proposal_accept_phrase_must_have_action => [name, null, true];
    accept:list_proposal_accept_phrase_with_action => accept;
}
