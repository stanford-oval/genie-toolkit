// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>

// Refinement templates: the search is NOT complete (0, or more than 1 result), and the
// agent doesn't want to show results
//
// These include proposals, and empty search errors.
// A proposal is when the agent proposed a refined search; the user answers:
// - some form of "yes"
// - some form of "no" followed by another search refinement

import { Ast, } from 'thingtalk';

import * as C from '../../templates/ast_manip';
import ThingpediaLoader from '../../templates/load-thingpedia';
import * as D from '../dialogue_acts';

negative_proposal_request : Ast.Expression = {
    ?multiwoz counterproposal_preamble ('a' | 'any') request:answer_noun_phrase '.' => request;
    counterproposal_preamble request:anything_phrase '.' => request;
}

negative_proposal_answer_preamble : Ast.Expression = {
    ( ('no ,' | 'no' | '') ('i am not in the mood for a' | 'i do not like' | 'i do not want') phrase:answer_noun_phrase
    | ('no ,' | 'no' | '') ('i am not in the mood for a' | 'i do not like' | 'i do not want') phrase:anything_phrase
    ) => phrase;
}

negative_proposal_reply : D.NegativeProposalReply = {
    ('no ,' | 'no' | '') request:negative_proposal_request => [null, request];

    ?multiwoz {
        preamble:negative_proposal_answer_preamble => [preamble, null];
        preamble:negative_proposal_answer_preamble request:negative_proposal_request with { functionName = preamble.functionName } => [preamble, request];
    }
}
